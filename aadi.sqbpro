<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/GL/9 SQL/project/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="2941"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,11:mainORDER_ITEMS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="147"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="170"/><column index="5" value="147"/><column index="6" value="105"/><column index="7" value="110"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="134"/><column index="2" value="61"/><column index="3" value="85"/><column index="4" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="163"/><column index="2" value="209"/><column index="3" value="208"/><column index="4" value="270"/><column index="5" value="208"/><column index="6" value="147"/><column index="7" value="300"/><column index="8" value="252"/><column index="9" value="222"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="122"/><column index="2" value="163"/><column index="4" value="176"/><column index="5" value="182"/><column index="6" value="175"/><column index="7" value="271"/><column index="8" value="141"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="122"/><column index="2" value="148"/><column index="3" value="229"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="148"/><column index="2" value="300"/><column index="3" value="255"/><column index="4" value="186"/><column index="5" value="300"/><column index="6" value="61"/><column index="7" value="85"/><column index="8" value="91"/><column index="9" value="97"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="255"/><column index="2" value="253"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SHIPPER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="141"/><column index="2" value="175"/><column index="3" value="186"/><column index="4" value="213"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Q1.">--1. Write a query to Display the product details (product_class_code, product_id, product_desc,product_price,) as per the following criteria and sort them in descending order of category:
--a. If the category is 2050, increase the price by 2000
--b. If the category is 2051, increase the price by 500
--c. If the category is 2052, increase the price by 600.

select PRODUCT_ID,PRODUCT_DESC,PRODUCT_CLASS_CODE,PRODUCT_PRICE,
CASE
	WHEN PRODUCT_CLASS_CODE=2050 then PRODUCT_PRICE+2000
	WHEN PRODUCT_CLASS_CODE=2051 then PRODUCT_PRICE+500
	WHEN PRODUCT_CLASS_CODE=2052 then PRODUCT_PRICE+600
	else PRODUCT_PRICE
	END New_Price
from PRODUCT
order by PRODUCT_CLASS_CODE DESC

 
</sql><sql name="Q2.">--2.Write a query to display (product_class_desc, product_id, product_desc,product_quantity_avail ) and Show inventory status of products as below as per their available quantity:
--a. For Electronics and Computer categories, if available quantity is &lt;= 10, show 'Low stock', 11 &lt;= qty &lt;= 30, show 'In stock', &gt;= 31, show 'Enough stock'
--b. For Stationery and Clothes categories, if qty &lt;= 20, show 'Low stock', 21 &lt;= qty &lt;=80, show 'In stock', &gt;= 81, show 'Enough stock'
--c. Rest of the categories, if qty &lt;= 15 – 'Low Stock', 16 &lt;= qty &lt;= 50 – 'In Stock', &gt;= 51 –'Enough stock'
--For all categories, if available quantity is 0, show 'Out of stock'.

select a.PRODUCT_ID,PRODUCT_DESC,PRODUCT_QUANTITY_AVAIL,PRODUCT_CLASS_DESC,
CASE
	WHEN ((PRODUCT_CLASS_DESC='Electronics' or PRODUCT_CLASS_DESC='Computer') and PRODUCT_QUANTITY_AVAIL &lt;= 10) then 'Low Stock'
	WHEN ((PRODUCT_CLASS_DESC='Electronics' or PRODUCT_CLASS_DESC='Computer') and (PRODUCT_QUANTITY_AVAIL &gt;=11 and PRODUCT_QUANTITY_AVAIL &lt;=30)) then 'In Stock'
	WHEN ((PRODUCT_CLASS_DESC='Electronics' or PRODUCT_CLASS_DESC='Computer') and PRODUCT_QUANTITY_AVAIL &gt;= 31) then 'Enough Stock'
	
	WHEN ((PRODUCT_CLASS_DESC='Stationery' or PRODUCT_CLASS_DESC='Clothes') and PRODUCT_QUANTITY_AVAIL &lt;=20) then 'Low Stock'
	WHEN ((PRODUCT_CLASS_DESC='Stationery' or PRODUCT_CLASS_DESC='Clothes') and (PRODUCT_QUANTITY_AVAIL &gt;=21 and PRODUCT_QUANTITY_AVAIL &lt;=80)) then 'In Stock'
	WHEN ((PRODUCT_CLASS_DESC='Stationery' or PRODUCT_CLASS_DESC='Clothes') and PRODUCT_QUANTITY_AVAIL &gt;= 81) then 'Enough Stock'
	
	WHEN ((PRODUCT_CLASS_DESC not in ('Electronics','Computer','Stationery','Clothes')) and PRODUCT_QUANTITY_AVAIL &lt;=15) then 'Low Stock'
	WHEN ((PRODUCT_CLASS_DESC not in ('Electronics','Computer','Stationery','Clothes')) and (PRODUCT_QUANTITY_AVAIL &gt;=16 and PRODUCT_QUANTITY_AVAIL &lt;=50)) then 'In Stock'
	WHEN ((PRODUCT_CLASS_DESC not in ('Electronics','Computer','Stationery','Clothes')) and PRODUCT_QUANTITY_AVAIL &gt;= 51) then 'Enough Stock'
	
	WHEN (PRODUCT_QUANTITY_AVAIL &gt;= 51) then 'Out of Stock'
	END Quantity_Status
	
FROM PRODUCT a join PRODUCT_CLASS b
where a.PRODUCT_CLASS_CODE=b.PRODUCT_CLASS_CODE</sql><sql name="Q3.">--3.Write a query to Show the count of cities in all countries 
--other than USA &amp; MALAYSIA, with more than 1 city, in the descending order of CITIES.

select country,count(city)as Number_of_Cities
from address 
where country not in ('USA','Malaysia')
group by country
having count(city)&gt;1
order by count(city) desc</sql><sql name="Q4.">--4.Write a query to display the customer_id,customer full name ,city,pincode,and order details (order id,order date, product class desc, product desc, subtotal(product_quantity * product_price)) 
--for orders shipped to cities whose pin codes do not have any 0s in them. 
--Sort the output on customername, order date and subtotal.

SELECT c.CUSTOMER_ID,(CUSTOMER_FNAME ||' '||CUSTOMER_LNAME) as CUSTOMER_FULLNAME,CITY,PINCODE,oh.ORDER_ID,ORDER_DATE,PRODUCT_CLASS_DESC,PRODUCT_DESC,(PRODUCT_QUANTITY*PRODUCT_PRICE) as SubTotal
from ONLINE_CUSTOMER c join ADDRESS a, order_header oh,order_items oi,product p,product_class pc
on c.ADDRESS_ID=a.ADDRESS_ID
AND c.CUSTOMER_ID=oh.CUSTOMER_ID
AND oi.ORDER_ID=oh.ORDER_ID
AND oi.PRODUCT_ID=p.PRODUCT_ID
AND p.PRODUCT_CLASS_CODE=pc.PRODUCT_CLASS_CODE
where PINCODE not like '%0%' and ORDER_STATUS='Shipped'
order by customer_fullname,ORDER_DATE,subtotal;

</sql><sql name="Q5.">--5.Write a Query to display product id,product description,totalquantity(sum(product quantity)
--for an item which has been bought maximum no. of times along with product id 201.

SELECT p.PRODUCT_ID,PRODUCT_DESC,sum(PRODUCT_QUANTITY) as Total_Quantity
FROM PRODUCT p join ORDER_ITEMS o on p.PRODUCT_ID=o.PRODUCT_ID
where ORDER_ID in (SELECT ORDER_ID FROM PRODUCT p join ORDER_ITEMS o 
					on p.PRODUCT_ID=o.PRODUCT_ID WHERE p.PRODUCT_ID=201)
group by p.PRODUCT_ID
ORDER by sum(product_quantity) DESC
limit 1
</sql><sql name="Q6.">--6.Write a query to display the customer_id,customer name, email and order details (order id, product desc,product qty, subtotal(product_quantity * product_price)) 
--for all customers 
even if they have not ordered any item.

SELECT c.CUSTOMER_ID,(CUSTOMER_FNAME ||' '||CUSTOMER_LNAME) as CUSTOMER_FULLNAME,CUSTOMER_EMAIL,oh.ORDER_ID,PRODUCT_DESC,PRODUCT_QUANTITY,(PRODUCT_QUANTITY*PRODUCT_PRICE) as SubTotal
from ONLINE_CUSTOMER c
left join ADDRESS a on c.ADDRESS_ID=a.ADDRESS_ID
left join order_header oh on c.CUSTOMER_ID=oh.CUSTOMER_ID
left join order_items oi on oi.ORDER_ID=oh.ORDER_ID
left join product p on oi.PRODUCT_ID=p.PRODUCT_ID
left join product_class pc on p.PRODUCT_CLASS_CODE=pc.PRODUCT_CLASS_CODE
</sql><current_tab id="5"/></tab_sql></sqlb_project>
